name: docker-image

on:
  workflow_call:
    inputs:
      release:
        required: true
        type: string
      commit:
        required: true
        type: string
      build_date:
        required: true
        type: string
      sign:
        required: false
        default: false
        type: boolean
    outputs:
      digest:
        description: The digest of the pushed image.
        value: ${{ jobs.docker-image.outputs.digest }}

permissions:
  contents: read
  id-token: write

jobs:
  docker-image:
    runs-on: ubuntu-22.04
    outputs:
      image: ${{ steps.build-and-push.outputs.image }}
      digest: ${{ steps.build-and-push.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Set up Docker Buildx
        id: Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0

      - name: Login to Docker Hub
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_SECRET }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: arn:aws:iam::292999226676:role/github_actions-falcoctl-ecr
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: public

      - name: Docker Meta
        id: meta_falcoctl
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          # list of Docker images to use as base name for tags
          images: |
            docker.io/falcosecurity/falcoctl
            public.ecr.aws/falcosecurity/falcoctl
          tags: |
            type=ref,event=branch
            type=semver,pattern={{ version }}
            type=semver,pattern={{ major }}
            type=semver,pattern={{ major }}.{{ minor }}

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_falcoctl.outputs.tags }}
          file: ./build/Dockerfile
          build-args: |
            RELEASE=${{ inputs.release }}
            COMMIT=${{ inputs.commit }}
            BUILD_DATE=${{ inputs.build_date }}

      - name: Install Cosign
        if: ${{ inputs.sign }}
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0

      - name: Sign the images with GitHub OIDC Token
        if: ${{ inputs.sign }}
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.meta_falcoctl.outputs.tags }}
          COSIGN_YES: "true"
        run: echo "${TAGS}" | xargs -I {} cosign sign {}@${DIGEST}

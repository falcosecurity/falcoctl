name: docker-image

on:
  workflow_call:
    inputs:
      release:
        required: true
        type: string
      commit:
        required: true
        type: string
      build_date:
        required: true
        type: string
      sign:
        required: false
        default: false
        type: boolean
    outputs:
      digest:
        description: The digest of the pushed image.
        value: ${{ jobs.docker-image.outputs.digest }}

permissions:
  contents: read
  id-token: write

jobs:
  docker-image:
    runs-on: ubuntu-22.04
    outputs:
      image: ${{ steps.build-and-push.outputs.image }}
      digest: ${{ steps.build-and-push.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        id: Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Login to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_SECRET }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: arn:aws:iam::292999226676:role/github_actions-falcoctl-ecr
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: public

      - name: Docker Meta
        id: meta_falcoctl
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          # list of Docker images to use as base name for tags
          images: |
            docker.io/falcosecurity/falcoctl
            public.ecr.aws/falcosecurity/falcoctl
          tags: |
            type=ref,event=branch
            type=semver,pattern={{ version }}
            type=semver,pattern={{ major }}
            type=semver,pattern={{ major }}.{{ minor }}

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_falcoctl.outputs.tags }}
          file: ./build/Dockerfile
          build-args: |
            RELEASE=${{ inputs.release }}
            COMMIT=${{ inputs.commit }}
            BUILD_DATE=${{ inputs.build_date }}

      - name: Install Cosign
        if: ${{ inputs.sign }}
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - name: Sign the images with GitHub OIDC Token
        if: ${{ inputs.sign }}
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.meta_falcoctl.outputs.tags }}
          COSIGN_YES: "true"
        run: echo "${TAGS}" | xargs -I {} cosign sign {}@${DIGEST}

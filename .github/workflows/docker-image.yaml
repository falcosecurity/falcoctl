name: docker-image

on:
  workflow_call:
    inputs:
      release:
        required: true
        type: string
      commit:
        required: true
        type: string
      build_date:
        required: true
        type: string
      sign:
        required: false
        default: false
        type: boolean
    outputs:
      digest:
        description: The digest of the pushed image.
        value: ${{ jobs.docker-image.outputs.digest }}

permissions:
  contents: read
  id-token: write

jobs:
  docker-image:
    runs-on: ubuntu-22.04
    outputs:
      image: ${{ steps.build-and-push.outputs.image }}
      digest: ${{ steps.build-and-push.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        id: Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_SECRET }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: arn:aws:iam::292999226676:role/github_actions-falcoctl-ecr
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: public

      - name: Docker Meta
        id: meta_falcoctl
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          # list of Docker images to use as base name for tags
          images: |
            docker.io/falcosecurity/falcoctl
            public.ecr.aws/falcosecurity/falcoctl
          tags: |
            type=ref,event=branch
            type=semver,pattern={{ version }}
            type=semver,pattern={{ major }}
            type=semver,pattern={{ major }}.{{ minor }}

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_falcoctl.outputs.tags }}
          file: ./build/Dockerfile
          build-args: |
            RELEASE=${{ inputs.release }}
            COMMIT=${{ inputs.commit }}
            BUILD_DATE=${{ inputs.build_date }}

      - name: Install Cosign
        if: ${{ inputs.sign }}
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0

      - name: Sign the images with GitHub OIDC Token
        if: ${{ inputs.sign }}
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.meta_falcoctl.outputs.tags }}
          COSIGN_YES: "true"
        run: echo "${TAGS}" | xargs -I {} cosign sign {}@${DIGEST}

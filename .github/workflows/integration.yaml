name: Integration Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [arm64, amd64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
    - name: Checkout commit
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b #v3.0.2
      with:
        fetch-depth: 0

    - name: Setup Go
      uses: actions/setup-go@84cbf8094393cdc5fe1fe1671ff2647332956b1a #v3.2.1
      with:
        go-version: 1.19

    - name: Build Falcoctl
      run: >
        go build -ldflags="-s -w" -o falcoctl-${{ matrix.goos }}-${{ matrix.goarch }} .
      env:
        CGO_ENABLED: 0
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}

    - name: Create Archives
      run: |
        cp falcoctl-${{ matrix.goos }}-${{ matrix.goarch }} falcoctl
        tar -czvf falcoctl-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz falcoctl LICENSE

    - name: Upload falcoctl artifacts
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 #v3.1.0
      with:
        name: falcoctl-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ./falcoctl-${{ matrix.goos }}-${{ matrix.goarch }}
        retention-days: 1

    - name: Upload falcoctl archives
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 #v3.1.0
      with:
        name: falcoctl-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
        path: ./falcoctl-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
        retention-days: 1

  docker-configure:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-22.04
    outputs:
      release: ${{ steps.vars.outputs.release }}
      commit: ${{ steps.vars.outputs.commit }}
      build_date: ${{ steps.vars.outputs.build_date }}
    steps:
      - name: Set version fields
        id: vars
        run: |
          echo "release=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "commit=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

  docker-image:
    if: ${{ github.event_name == 'push' }}
    needs: docker-configure
    uses: ./.github/workflows/docker-image.yaml
    secrets: inherit
    with:
      release: ${{ needs.docker-configure.outputs.release }}
      commit: ${{ needs.docker-configure.outputs.commit }}
      build_date: ${{ needs.docker-configure.outputs.build_date }}

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b #v3.0.2

      - name: Setup Go
        uses: actions/setup-go@84cbf8094393cdc5fe1fe1671ff2647332956b1a #v3.2.1
        with:
          go-version: 1.19

      - name: Run tests
        run: go test -cover ./...
